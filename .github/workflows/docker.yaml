name: Publish a Docker Image

on:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: sajandev/fsrapp

jobs:
  build-and-push-fastapi:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Release tags
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Latest tag
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Full-Stack FastAPI React Template
            org.opencontainers.image.description=Production-ready FastAPI backend with React frontend
            org.opencontainers.image.vendor=sajandev

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Add build args for version info
          build-args: |
            VERSION=${{ github.ref_name }}
            BUILD_DATE=${{ steps.meta.outputs.labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

      - name: Show build results
        run: |
          echo "Image digest: ${{ steps.build.outputs.digest }}"
          echo "Tags created:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Labels applied:"
          echo "${{ steps.meta.outputs.labels }}"

      - name: Trigger deployment fsrapp
        run: |
          echo "Triggering deployment via Coolify webhook"
          curl --request GET "${{ secrets.COOLIFY_WEBHOOK_URI }}" --header "Authorization: Bearer ${{ secrets.COOLIFY_DEPLOY_KEY }}"
          echo "Deployment triggered."


  push-fsrapp-worker-celery:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Celery
        id: meta-celery
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/sajandev/fsrappworker
          tags: |
            # Release tags
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Latest tag
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Full-Stack FastAPI React Template - Celery Worker
            org.opencontainers.image.description=Celery worker for background tasks
            org.opencontainers.image.vendor=sajandev

      - name: Build and push Celery Docker image
        id: build-celery
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.celery
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta-celery.outputs.tags }}
          labels: ${{ steps.meta-celery.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Add build args for version info
          build-args: |
            VERSION=${{ github.ref_name }}
            BUILD_DATE=${{ steps.meta-celery.outputs.labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

      - name: Show Celery build results
        run: |
          echo "Celery image digest: ${{ steps.build-celery.outputs.digest }}"
          echo "Celery tags created:"
          echo "${{ steps.meta-celery.outputs.tags }}"
      
      - name: Trigger deployment fsrappworker
        run: |
          echo "Triggering deployment via Coolify webhook"
          curl --request GET "${{ secrets.COOLIFY_FSRAPP_WORKER_WEBHOOK_URI }}" --header "Authorization: Bearer ${{ secrets.COOLIFY_DEPLOY_KEY }}"
          echo "Deployment triggered."

